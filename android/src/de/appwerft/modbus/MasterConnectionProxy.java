/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2010 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package de.appwerft.modbus;

import java.net.InetAddress;
import java.net.MalformedURLException;
import java.net.URL;

import net.wimpi.modbus.net.TCPMasterConnection;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollProxy;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.titanium.TiC;

// This proxy can be created by calling Modbus.createExample({message: "hello world"})
@Kroll.proxy(creatableInModule = ModbusModule.class)
public class MasterConnectionProxy extends KrollProxy {
	// Standard Debugging variables
	private static final String LCAT = "Modbus";
	static int DEFAULTPORT = 502;
	public int ref = 0;
	public int count = 0;
	public int repeat = 1;
	TCPMasterConnection conn;

	void createConn(KrollDict options) {
		/* import options */
		if (options.containsKeyAndNotNull("ref"))
			ref = options.getInt("ref");
		if (options.containsKeyAndNotNull("count"))
			ref = options.getInt("count");
		if (options.containsKeyAndNotNull("repeat"))
			ref = options.getInt("repeat");
		URL url = null;
		if (options.containsKeyAndNotNull(TiC.PROPERTY_URL)) {
			try {
				url = new URL(options.getString(TiC.PROPERTY_URL));
			} catch (MalformedURLException e) {
				e.printStackTrace();
			}
		}
		if (url != null)
			try {
				// Open the connection
				conn = new TCPMasterConnection(InetAddress.getByName(url
						.getHost()));
				int port = DEFAULTPORT;
				if (url.getPort() != 0) {
					conn.setPort(port);
				} else
					conn.setPort(DEFAULTPORT);
			} catch (Exception e) {
				e.printStackTrace();
			}
		else
			Log.e(LCAT, "URL invalide or empty");

	}

	@Override
	public void handleCreationDict(KrollDict options) {
		super.handleCreationDict(options);
		createConn(options);
	}
}